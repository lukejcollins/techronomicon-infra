name: 'Terraform Preprod Deployment'

on:
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    if: contains(github.event.pull_request.labels.*.name, 'preprod')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ secrets.PREPROD_STATE_BUCKET_NAME }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
        TF_VAR_DB_USERNAME: ${{ secrets.TF_VAR_DB_USERNAME }}
        TF_VAR_DB_PASSWORD: ${{ secrets.TF_VAR_DB_PASSWORD }}
        TF_VAR_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        TF_VAR_TECHRONOMICON_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        TF_VAR_TECHRONOMICON_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
        TF_VAR_TECHRONOMICON_STORAGE_BUCKET_NAME: ${{ secrets.PREPROD_TECHRONOMICON_STORAGE_BUCKET_NAME }}
        TF_VAR_TECHRONOMICON_RDS_DB_NAME: ${{ secrets.TECHRONOMICON_RDS_DB_NAME }}
        TF_VAR_STATE_BUCKET_NAME: ${{ secrets.PREPROD_STATE_BUCKET_NAME }}
        TF_VAR_ROUTE_53_RESOURCES_BOOL: ${{ secrets.PREPROD_ROUTE_53_RESOURCES_BOOL }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
        TF_VAR_DB_USERNAME: ${{ secrets.TF_VAR_DB_USERNAME }}
        TF_VAR_DB_PASSWORD: ${{ secrets.TF_VAR_DB_PASSWORD }}
        TF_VAR_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        TF_VAR_TECHRONOMICON_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        TF_VAR_TECHRONOMICON_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
        TF_VAR_TECHRONOMICON_STORAGE_BUCKET_NAME: ${{ secrets.PREPROD_TECHRONOMICON_STORAGE_BUCKET_NAME }}
        TF_VAR_TECHRONOMICON_RDS_DB_NAME: ${{ secrets.TECHRONOMICON_RDS_DB_NAME }}
        TF_VAR_STATE_BUCKET_NAME: ${{ secrets.PREPROD_STATE_BUCKET_NAME }}
        TF_VAR_ROUTE_53_RESOURCES_BOOL: ${{ secrets.PREPROD_ROUTE_53_RESOURCES_BOOL }}

    - name: Get Preprod IP Address
      id: preprod_ip
      run: echo "PREPROD_IP_ADDRESS=$(terraform output instance_ip_address)" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}

    - name: Get Public Key
      run: |
        KEY_RESPONSE=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                             -H "Accept: application/vnd.github.v3+json" \
                             https://api.github.com/repos/${{ github.repository }}/actions/secrets/public-key)
        KEY_ID=$(echo "$KEY_RESPONSE" | grep "\"key_id\":" | awk -F: '{print $2}' | awk -F\" '{print $2}')
        PUBLIC_KEY=$(echo "$KEY_RESPONSE" | grep "\"key\":" | awk -F: '{print $2}' | awk -F\" '{print $2}')
        echo "KEY_ID=$KEY_ID" >> $GITHUB_ENV
        echo "PUBLIC_KEY=$PUBLIC_KEY" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}

    - name: Encrypt and Set Secret
      run: |
        ENCRYPTED_VALUE=$(echo -n "$PREPROD_IP_ADDRESS" | openssl rsautl -encrypt -pubin -inkey <(echo $PUBLIC_KEY) | base64)
        PAYLOAD="{\"encrypted_value\":\"$ENCRYPTED_VALUE\",\"key_id\":\"$KEY_ID\"}"
        curl -u "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" -X PUT -H "Content-Type: application/json" \
             -d "$PAYLOAD" "https://api.github.com/repos/${{ github.repository }}/actions/secrets/PREPROD_IP_ADDRESS"
